import sqlite3
from datetime import datetime
from pprint import pprint
import sys
import os
from datetime import datetime
import pickle
import hk_new

start_analysis_at = datetime.strptime('20120406','%Y%m%d')
end_analysis_at = datetime.strptime('20120531','%Y%m%d')


conn = sqlite3.connect('C:/projects/dbs/SP2_data.db')
c = conn.cursor()

c.execute('''CREATE TABLE if not exists SP2_coating_analysis(
id INTEGER PRIMARY KEY AUTOINCREMENT,
sp2b_file TEXT, 
file_index INT, 
instr TEXT,
instr_locn TEXT,
particle_type TEXT,		
particle_dia FLOAT,				
UTC_datetime TIMESTAMP,
actual_scat_amp FLOAT,
actual_peak_pos INT,
FF_scat_amp FLOAT,
FF_peak_pos INT,
FF_gauss_width FLOAT,
zeroX_to_peak FLOAT,
LF_scat_amp FLOAT,
incand_amp FLOAT,
lag_time_fit_to_incand FLOAT,
LF_baseline_pct_diff FLOAT,
UNIQUE (sp2b_file, file_index, instr)
)''')

#**********parameters dictionary**********
parameters = {
'acq_rate': 5000000,
#date and time
'timezone':-8,
#will be set by hk analysis
'avg_flow':120, #in vccm
#parameter to find bad flow durations
'flow_min' : 115,
'flow_max' : 125,
'YAG_min' : 4,
'YAG_max' : 6,
'min_good_points' : 10,
#show plots?
'show_plot':False,
}



data_dir = 'D:/2012/WHI_UBCSP2/Binary/' 

os.chdir(data_dir)
for directory in os.listdir(data_dir):
	if os.path.isdir(directory) == True and directory.startswith('20'):
		folder_date = datetime.strptime(directory, '%Y%m%d')		
		parameters['folder']= directory
		if folder_date >= start_analysis_at and folder_date <= end_analysis_at:
			parameters['directory']=os.path.abspath(directory)
			os.chdir(os.path.abspath(directory))
			
			
			#*******HK ANALYSIS************ 

			##use for hk files with timestamp (this is for the UBCSP2 after 20120405)
			avg_flow = hk_new.find_bad_hk_durations(parameters)
			parameters['avg_flow'] = avg_flow
			
			
			
			
			#grab the pickled bad_durations file generated by the HK analysis
			for hk_file in os.listdir('.'):
				if hk_file.endswith('.hkpckl'):
					hk_data = open(hk_file, 'r')
					bad_durations = pickle.load(hk_data)
					hk_data.close()
            
			for row in bad_durations:
				duration_start = datetime.utcfromtimestamp(row[0])
				duration_end   = datetime.utcfromtimestamp(row[1])
				
				
				print duration_start, duration_end
			
			
			
			os.chdir(data_dir)
conn.close()	





#c.execute('''ALTER TABLE SP2_coating_analysis ADD COLUMN rbcmass FLOAT''')


conn.close()